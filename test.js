require( "mocha" )
const assert = require( "assert" )
const codes = require( "./" )

describe( "ansi-codes", function() {
    it( "reset codes", function() {
        assert.strictEqual( codes.reset.all, "\u001b[0m" )
        assert.strictEqual( codes.reset.bold, "\u001b[22m" )
        assert.strictEqual( codes.reset.dim, "\u001b[22m" )
        assert.strictEqual( codes.reset.italic, "\u001b[23m" )
        assert.strictEqual( codes.reset.underline, "\u001b[24m" )
        assert.strictEqual( codes.reset.inverse, "\u001b[27m" )
        assert.strictEqual( codes.reset.hidden, "\u001b[28m" )
        assert.strictEqual( codes.reset.strike, "\u001b[29m" )
        assert.strictEqual( codes.reset.fg, "\u001b[39m" )
        assert.strictEqual( codes.reset.bg, "\u001b[49m" )
        assert.strictEqual( codes.reset.frame, "\u001b[54m" )
        assert.strictEqual( codes.reset.encircle, "\u001b[54m" )
        assert.strictEqual( codes.reset.overline, "\u001b[55m" )
    } )

    it( "modifier codes", function() {
        assert.strictEqual( codes.modifier.bold, "\u001b[1m" )
        assert.strictEqual( codes.modifier.dim, "\u001b[2m" )
        assert.strictEqual( codes.modifier.italic, "\u001b[3m" )
        assert.strictEqual( codes.modifier.underline, "\u001b[4m" )
        assert.strictEqual( codes.modifier.inverse, "\u001b[7m" )
        assert.strictEqual( codes.modifier.hidden, "\u001b[8m" )
        assert.strictEqual( codes.modifier.strike, "\u001b[9m" )
        assert.strictEqual( codes.modifier.frame, "\u001b[51m" )
        assert.strictEqual( codes.modifier.encircle, "\u001b[52m" )
        assert.strictEqual( codes.modifier.overline, "\u001b[53m" )
    } )

    it( "foreground color codes", function() {
        assert.strictEqual( codes.fg.black, "\u001b[30m" )
        assert.strictEqual( codes.fg.red, "\u001b[31m" )
        assert.strictEqual( codes.fg.green, "\u001b[32m" )
        assert.strictEqual( codes.fg.yellow, "\u001b[33m" )
        assert.strictEqual( codes.fg.blue, "\u001b[34m" )
        assert.strictEqual( codes.fg.magenta, "\u001b[35m" )
        assert.strictEqual( codes.fg.cyan, "\u001b[36m" )
        assert.strictEqual( codes.fg.white, "\u001b[37m" )
    } )

    it( "bright foreground color codes", function() {
        assert.strictEqual( codes.fg.bright.black, "\u001b[90m" )
        assert.strictEqual( codes.fg.bright.red, "\u001b[91m" )
        assert.strictEqual( codes.fg.bright.green, "\u001b[92m" )
        assert.strictEqual( codes.fg.bright.yellow, "\u001b[93m" )
        assert.strictEqual( codes.fg.bright.blue, "\u001b[94m" )
        assert.strictEqual( codes.fg.bright.magenta, "\u001b[95m" )
        assert.strictEqual( codes.fg.bright.cyan, "\u001b[96m" )
        assert.strictEqual( codes.fg.bright.white, "\u001b[97m" )
    } )

    it( "background color codes", function() {
        assert.strictEqual( codes.bg.black, "\u001b[40m" )
        assert.strictEqual( codes.bg.red, "\u001b[41m" )
        assert.strictEqual( codes.bg.green, "\u001b[42m" )
        assert.strictEqual( codes.bg.yellow, "\u001b[43m" )
        assert.strictEqual( codes.bg.blue, "\u001b[44m" )
        assert.strictEqual( codes.bg.magenta, "\u001b[45m" )
        assert.strictEqual( codes.bg.cyan, "\u001b[46m" )
        assert.strictEqual( codes.bg.white, "\u001b[47m" )
    } )

    it( "bright background color codes", function() {
        assert.strictEqual( codes.bg.bright.black, "\u001b[100m" )
        assert.strictEqual( codes.bg.bright.red, "\u001b[101m" )
        assert.strictEqual( codes.bg.bright.green, "\u001b[102m" )
        assert.strictEqual( codes.bg.bright.yellow, "\u001b[103m" )
        assert.strictEqual( codes.bg.bright.blue, "\u001b[104m" )
        assert.strictEqual( codes.bg.bright.magenta, "\u001b[105m" )
        assert.strictEqual( codes.bg.bright.cyan, "\u001b[106m" )
        assert.strictEqual( codes.bg.bright.white, "\u001b[107m" )
    } )
} )
